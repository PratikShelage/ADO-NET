// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestAppProject.Data;

#nullable disable

namespace TestAppProject.Migrations
{
    [DbContext(typeof(appDbContext))]
    [Migration("20250901095936_v9")]
    partial class v9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestAppProject.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RollNO")
                        .HasColumnType("integer");

                    b.Property<string>("StudentClass")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("count")
                        .HasColumnType("integer");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("isAbsent")
                        .HasColumnType("boolean");

                    b.Property<bool?>("isPresent")
                        .HasColumnType("boolean");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("presentDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("TestAppProject.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("about")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("age")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly?>("dob")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("hobbies")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("landmark")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("middlename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phoneNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pincode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("resetPasswordToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("resetpasswordExpiry")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("role")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TestAppProject.Model.User", b =>
                {
                    b.OwnsOne("TestAppProject.DTO.ImageDto", "profilepic", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("integer");

                            b1.Property<string>("base64string")
                                .HasColumnType("text");

                            b1.Property<string>("name")
                                .HasColumnType("text");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("profilepic")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
